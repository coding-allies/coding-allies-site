# Sample workflow for building and deploying a Jekyll site to GitHub Pages
# name: Deploy Jekyll with GitHub Pages dependencies preinstalled

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - name: Build with Jekyll
#         uses: actions/jekyll-build-pages@v1
#         with:
#           source: ./public
#           destination: ./_site
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "^14.0.0"
#           cache: "npm"
#       - name: npm install, build
#         run: |
#           npm ci
#           npm run build
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
# name: Github Page Deploy Workflow

# on:
#   push:
#     branches: [main]
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ">=6.0.0"
#       - run: npm ci
#       - run: npm run build
#       - name: Upload production-ready build files
#         uses: actions/upload-artifact@v2
#         with:
#           name: production-files
#           path: ./build
#       - name: Download artifact
#         uses: actions/download-artifact@v2
#         with:
#           name: production-files
#           path: ./build

#       - name: Deploy to gh-pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./build

name: React App Deployment # name of the workflo

on:
  push:
    branches:
      - main # branch name

jobs:
  deploy-react-to-gh-pages:
    runs-on: ubuntu-latest
    env:
      CI: false
      EXAMPLE: example # environment variable

    steps:
      # checkout the repository content to github runner
      - name: Checkout
        uses: actions/checkout@v2

      # setup nodejs environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "18.16.1"

      # cache the dependencies to speed up the build
      # - name: Cache dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # install dependencies
      - name: Install dependencies
        run: npm i

      # build the react app
      - name: Build
        run: npm run build

      # deploy the react app to github pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          # NOTE: GITHUB_TOKEN is a secret token that is automatically generated by GitHub
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build # directory to deploy
